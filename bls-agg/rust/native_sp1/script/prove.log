   Compiling num-bigint v0.3.3
   Compiling bls-agg-native-script v0.1.0 (/Users/prudhvirampey/Documents/stackrlabs/succinct-residency-exps/bls-agg/rust/native_sp1/script)
   Compiling addchain v0.2.0
   Compiling ff_derive v0.13.0
   Compiling ff v0.13.0
   Compiling group v0.13.0
   Compiling p3-bn254-fr v0.1.3-succinct
   Compiling elliptic-curve v0.13.8
   Compiling pasta_curves v0.5.1
   Compiling ecdsa v0.16.9
   Compiling zkhash v0.2.0
   Compiling k256 v0.13.4
   Compiling sp1-curves v2.0.0
   Compiling ethers-core v2.0.14
   Compiling enr v0.10.0
   Compiling sp1-core-executor v2.0.0
warning: bls-agg-native-script@0.1.0: bls-agg-native-program built at 2024-10-14 21:52:15
   Compiling coins-bip32 v0.8.7
   Compiling coins-bip39 v0.8.7
   Compiling sp1-core-machine v2.0.0
   Compiling ethers-contract-abigen v2.0.14
   Compiling ethers-providers v2.0.14
   Compiling sp1-recursion-core v2.0.0
   Compiling ethers-signers v2.0.14
   Compiling sp1-recursion-core-v2 v2.0.0
   Compiling ethers-addressbook v2.0.14
   Compiling sp1-recursion-compiler v2.0.0
   Compiling ethers-contract v2.0.14
   Compiling sp1-recursion-program v2.0.0
   Compiling sp1-recursion-circuit v2.0.0
   Compiling ethers-middleware v2.0.14
   Compiling sp1-recursion-gnark-ffi v2.0.0
   Compiling ethers v2.0.14
   Compiling sp1-prover v2.0.0
   Compiling sp1-sdk v2.0.0
warning: unused variable: `report`
  --> src/main.rs:41:26
   |
41 |         let (mut output, report) = client.execute(ELF, stdin).run().unwrap();
   |                          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_report`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `result`
  --> src/main.rs:43:13
   |
43 |         let result = output.read::<u32>();
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: `bls-agg-native-script` (bin "bls-agg-native-script") generated 2 warnings
    Finished `release` profile [optimized] target(s) in 1m 48s
     Running `target/release/bls-agg-native-script --prove`
Input value: 2
[2m2024-10-15T04:53:58.247206Z[0m [32m INFO[0m Client circuit version: v2.0.0    
[2m2024-10-15T04:54:06.772313Z[0m [33m WARN[0m [1mnetwork_prover[0m: close [3mtime.busy[0m[2m=[0m4.16ms [3mtime.idle[0m[2m=[0m4.29Âµs
[2m2024-10-15T04:54:06.781332Z[0m [32m INFO[0m [1mexecute[0m: clk = 0 pc = 0x201744    
[2m2024-10-15T04:54:06.781666Z[0m [32m INFO[0m [1mexecute[0m: â”Œâ•´execution    
stdout: aggregated_signature: Signature(G2Affine { x: 0x00abc29d88c196991745975c9206b8f56ff120b70df72ce36024da3382e398b47189cf1e9e6e998212e8ba5ab2dc79e2 + 0x0056bb0d3fb4f892290380e62d0603e0af6bd5db8e4f405876ff397e473ace7310b3ff8509aeffb47da06e0e298d6327*u, y: 0x07512e3a97c6de7b86fd6b3be4b2a1a6732f34cdd4838d309f45f4a3dbca35ccf1821ef6814c20389c870fb4acac4937 + 0x11e4f26ddead8f98686b80580c8653bdc1ecac03f505159387c6cf1feaeb6be625c9c1a850ab134d3e2b770a8a9ee705*u, infinity: Choice(0) })
[2m2024-10-15T04:54:07.367591Z[0m [32m INFO[0m [1mexecute[0m: â””â•´5,993,596 cycles    
[2m2024-10-15T04:54:07.389812Z[0m [32m INFO[0m [1mexecute[0m: close [3mtime.busy[0m[2m=[0m616ms [3mtime.idle[0m[2m=[0m1.12Âµs
[2m2024-10-15T04:54:07.389843Z[0m [32m INFO[0m Simulation complete, cycles: 5998981    
[2m2024-10-15T04:54:09.706846Z[0m [32m INFO[0m Created proofrequest_01ja78dfczfvpsksvnrwr3mrmz    
[2m2024-10-15T04:54:09.706966Z[0m [32m INFO[0m View in explorer: https://explorer.succinct.xyz/proofrequest_01ja78dfczfvpsksvnrwr3mrmz    
thread 'main' panicked at src/main.rs:53:14:
failed to generate proof: Proof generation failed: Cycle limit exceeded
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
